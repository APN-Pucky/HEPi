:py:mod:`hepi.resummino.run`
============================

.. py:module:: hepi.resummino.run

.. autoapi-nested-parse::

   Runs Resummino



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   hepi.resummino.run.ResumminoRunner




Attributes
~~~~~~~~~~

.. autoapisummary::

   hepi.resummino.run.default_resummino_runner
   hepi.resummino.run.run
   hepi.resummino.run.set_path
   hepi.resummino.run.get_path


.. py:class:: ResumminoRunner(path: str, in_dir: str = None, out_dir: str = None, pre=None)

   Bases: :py:obj:`hepi.run.Runner`

   .. py:method:: orders() -> List[hepi.input.Order]

      List of supported Orders in this runner.


   .. py:method:: get_version() -> str


   .. py:method:: _check_path() -> bool

      Checks if the passed path is valid.


   .. py:method:: _check_input(p: hepi.Input, **kwargs) -> bool


   .. py:method:: _is_valid(file: str, p: hepi.Input, d, **kwargs) -> bool

      Verifies that a file is a complete output.

      :param file: File path to be parsed.
      :type file: str
      :param p: Onput parameters.
      :type p: :class:`hepi.Input`
      :param d: Param dictionary.
      :type d: :obj:`dict`

      :returns: True if `file` could be parsed.
      :rtype: bool


   .. py:method:: _parse_file(file: str) -> hepi.results.Result

      Extracts results from an output file.

      :param file: File path to be parsed.
      :type file: str

      :returns: If a value is not found in the file None is used.
      :rtype: :class:`Result`


   .. py:method:: _prepare(p: hepi.Input, **kwargs) -> hepi.run.RunParam



.. py:data:: default_resummino_runner
   

   Default Resummino Runner to provide backward compatibility

.. py:data:: run
   

   

.. py:data:: set_path
   

   

.. py:data:: get_path
   

   

