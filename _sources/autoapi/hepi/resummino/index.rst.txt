:py:mod:`hepi.resummino`
========================

.. py:module:: hepi.resummino

.. autoapi-nested-parse::

   :mod:`hepi` interface to Resummino.

   Find it here https://resummino.hepforge.org/.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   result/index.rst
   run/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   hepi.resummino.run
   hepi.resummino.set_path
   hepi.resummino.get_path



.. py:function:: run(params: List[hepi.Input], noskip=False, bar=False, no_parse=False, para=True, skip=True, parse=True, run=True) -> dict

   Run the passed list of parameters.

   :param params: All parameters that should be executed/queued.
   :type params: :obj:`list` of :class:`hepi.Input`
   :param noskip: False means stored runs will be skipped. Else the are overwritten.
   :type noskip: bool
   :param bar: Display a progressbar.
   :type bar: bool
   :param no_parse: Skip parsing the results.
                    This is the prefered cluster mode, as this function only queues the job.
   :type no_parse: bool
   :param para: Run jobs in parallel.
   :type para: bool
   :param run: Actually start/queue resummino.
   :type run: bool

   :returns:

             combined dictionary of results and parameters. Each member therein is a list.
                 The dictionary is empty if `no_parse` is set.
   :rtype: :obj:`dict`


.. py:function:: set_path(p: str)

   Set the path to the resummino folder containing the binary in './build/bin'.

   :param str: new Resummino path.


.. py:function:: get_path() -> str

   Get Resummino path.

   :returns: current Resummino path
   :rtype: str


