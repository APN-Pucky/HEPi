:py:mod:`hepi.plot`
===================

.. py:module:: hepi.plot


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   hepi.plot.title
   hepi.plot.energy_plot
   hepi.plot.combined_energy_plot
   hepi.plot.combined_plot
   hepi.plot.mass_plot
   hepi.plot.mass_vplot
   hepi.plot.get_mass
   hepi.plot.plot
   hepi.plot.index_open
   hepi.plot.slha_data
   hepi.plot.slha_plot
   hepi.plot.vplot
   hepi.plot.mass_mapplot
   hepi.plot.mapplot
   hepi.plot.map_vplot
   hepi.plot.err_plt
   hepi.plot.scale_plot
   hepi.plot.central_scale_plot
   hepi.plot.mass_and_K_plot
   hepi.plot.mass_and_ratio_plot



Attributes
~~~~~~~~~~

.. autoapisummary::

   hepi.plot.fig
   hepi.plot.axs
   hepi.plot.lines
   hepi.plot.labels


.. py:function:: title(axe, i: hepi.input.Input, scenario='', diff_L_R=None, extra='', **kwargs)


.. py:function:: energy_plot(dict_list, y, yscale=1.0, xaxis='E [GeV]', yaxis='$\\sigma$ [pb]', label=None, **kwargs)


.. py:function:: combined_energy_plot(dict_list, t, **kwargs)


.. py:function:: combined_plot(func, dict_list, t, *args, label=None, fill=False, fmt='.', interpolate=True, **kwargs)


.. py:function:: mass_plot(dict_list, y, part, logy=True, yaxis='$\\sigma$ [pb]', yscale=1.0, label=None, **kwargs)


.. py:function:: mass_vplot(dict_list, y, part, logy=True, yaxis='$\\sigma$ [pb]', yscale=1.0, label=None, mask=None, **kwargs)


.. py:function:: get_mass(l: dict, id: int)

   Get the mass of particle with id `id` out of the list in the "slha" element in the dict.

   Returns
       :obj:`list` of float : masses of particles in each element of the dict list.


.. py:function:: plot(dict_list, x, y, label=None, xaxis='E [GeV]', yaxis='$\\sigma$ [pb]', ratio=False, K=False, K_plus_1=False, logy=True, yscale=1.0, mask=None, **kwargs)


.. py:function:: index_open(var, idx)


.. py:function:: slha_data(li, index_list)


.. py:function:: slha_plot(li, x, y, **kwargs)


.. py:function:: vplot(x, y, label=None, xaxis='E [GeV]', yaxis='$\\sigma$ [pb]', logy=True, yscale=1.0, interpolate=True, plot_data=True, data_color=None, mask=-1, fill=False, data_fmt='.', fmt='-', print_area=False, **kwargs)


.. py:function:: mass_mapplot(dict_list, part1, part2, z, logz=True, zaxis='$\\sigma$ [pb]', zscale=1.0, label=None)


.. py:function:: mapplot(dict_list, x, y, z, xaxis=None, yaxis=None, zaxis=None, **kwargs)


.. py:function:: map_vplot(vx, vy, vz, xaxis=None, yaxis=None, zaxis=None, logz=True, zscale=1.0)


.. py:data:: fig
   

   

.. py:data:: axs
   

   

.. py:data:: lines
   :annotation: = []

   

.. py:data:: labels
   :annotation: = []

   

.. py:function:: err_plt(axes, x, y, label=None, error=False)


.. py:function:: scale_plot(dict_list, vl, seven_point_band=False, cont=False, error=True, li=None, plehn_color=False, yscale=1.0, unit='pb', yaxis=None, **kwargs)


.. py:function:: central_scale_plot(dict_list, vl, cont=False, error=True, yscale=1.0, unit='pb', yaxis=None)


.. py:function:: mass_and_K_plot(dl, li, p, scale=False, pdf=False, plehn=True, combined=False, cont=False, figsize=(6, 8), **kwargs)


.. py:function:: mass_and_ratio_plot(dl, li, p, scale=False, pdf=False, combined=False, cont=False, figsize=(6, 4), plot_data=True, fill=True, unit='pb', yscale=1.0, ylim=None, **kwargs)


