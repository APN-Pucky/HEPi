:py:mod:`hepi.input`
====================

.. py:module:: hepi.input


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   hepi.input.Order
   hepi.input.Input



Functions
~~~~~~~~~

.. autoapisummary::

   hepi.input.get_input_dir
   hepi.input.get_output_dir
   hepi.input.get_pre
   hepi.input.set_input_dir
   hepi.input.set_output_dir
   hepi.input.set_pre
   hepi.input.update_slha
   hepi.input.scan
   hepi.input.scale_scan
   hepi.input.seven_point_scan
   hepi.input.pdf_scan
   hepi.input.change_where
   hepi.input.scan_invariant_mass
   hepi.input.mass_scan
   hepi.input.slha_scan
   hepi.input.slha_scan_rel



Attributes
~~~~~~~~~~

.. autoapisummary::

   hepi.input.in_dir
   hepi.input.out_dir
   hepi.input.pre


.. py:data:: in_dir
   :annotation: = ./input/

   Input directory.

.. py:data:: out_dir
   :annotation: = ./output/

   Output directory.

.. py:data:: pre
   :annotation: = nice -n 5

   Prefix for run commands.

.. py:function:: get_input_dir()

   Get the input directory.

   :returns: :attr:`in_dir`
   :rtype: str


.. py:function:: get_output_dir()

   Get the input directory.

   :returns: :attr:`out_dir`
   :rtype: str


.. py:function:: get_pre()

   Gets the command prefix.

   :returns: :attr:`pre`
   :rtype: str


.. py:function:: set_input_dir(ind)

   Sets the input directory.

   :param ind: new input directory.
   :type ind: str


.. py:function:: set_output_dir(outd)

   Sets the output directory.

   :param outd: new output directory.
   :type outd: str


.. py:function:: set_pre(ppre)

   Sets the command prefix.

   :param ppre: new command prefix.
   :type ppre: str


.. py:class:: Order

   Bases: :py:obj:`enum.IntEnum`

   Computation orders.

   Initialize self.  See help(type(self)) for accurate signature.

   .. py:attribute:: LO
      :annotation: = 0

      Leading Order

   .. py:attribute:: NLO
      :annotation: = 1

      Next-to-Leading Order

   .. py:attribute:: NLO_PLUS_NLL
      :annotation: = 2

      Next-to-Leading Order plus Next-to-Leading Logarithms


.. py:class:: Input(order: Order, energy, particle1: int, particle2: int, slha: str, pdf_lo: str, pdf_nlo: str, mu_f=1.0, mu_r=1.0, pdfset_lo=0, pdfset_nlo=0, precision=0.01, max_iters=50, invariant_mass='auto', result='total', pt='auto', id='', model_path='/opt/MG5_aMC_v2_7_0/models/MSSMatNLO_UFO')

   Input for computation.


.. py:function:: update_slha(i: Input)

   Updates dependent parameters in Input `i`.

   Mainly concerns the `mu` value used by `madgraph`.




.. py:function:: scan(l: List[Input], var: str, range) -> List[Input]

   Scans a variable `var` over `range` in `l`.


.. py:function:: scale_scan(l: List[Input], range=3, distance=2.0)

   Scans scale by varying `mu_f` and `mu_r`.
   They take `range` values from 1/`distance` to `distance` in lograthmic spacing.
   Only points with `mu_f`=`mu_r` or `mu_r/f`=1 or `mu_r/f`=`distance` or `mu_r/f`=1/`distance` are returned.


.. py:function:: seven_point_scan(l: List[Input])

   Scans scale by varying `mu_f` and `mu_r` by factors of two excluding relative factors of 4.


.. py:function:: pdf_scan(l: List[Input])

   Scans NLO PDF sets.

   The PDF sets are infered from `lhapdf.getPDFSet` with the argument of `pdfset_nlo`.


.. py:function:: change_where(l: List[Input], dicts: dict, **kwargs)

   Applies the values of `dicts` if the key value pairs in `kwargs` agree with a member of the list `l`.

   The changes only applied to the matching list members.


.. py:function:: scan_invariant_mass(l: List[Input], diff, points, low=0.001)

   Logarithmic `invariant_mass` scan close to the production threshold.


.. py:function:: mass_scan(l: List[Input], var: int, range, diff_L_R=None) -> List[Input]

   Scans the PDG identified mass `var` over `range` in the list `l`.
   `diff_L_R` allows to set a fixed difference between masses of left- and right-handed particles.


.. py:function:: slha_scan(l: List[Input], block, var, range: List) -> List[Input]

   Scan a generic


.. py:function:: slha_scan_rel(l: List[Input], lambdas, range: List) -> List[Input]

   Scan a generic slha variable.


